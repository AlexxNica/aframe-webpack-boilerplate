{
  "name": "aframe-webpack-boilerplate",
  "version": "0.9.0-dev",
  "description": "A-Frame Starter Kit of WebVR with Webpack2 ES2015 SASS",
  "author": "Marko Kungla <marko.kungla@gmail.com> (https://github.com/mkungla)",
  "main": "src/js/index.js",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/mkungla/aframe-webpack-boilerplate.git"
  },
  "keywords": [
    "aframe",
    "aframe-boilerplate",
    "webpack2",
    "webpack",
    "es6",
    "babel",
    "sass",
    "sass boilerplate",
    "mocha",
    "chai",
    "istanbul"
  ],
  "scripts": {
    "clean": "npm-run-all clean:*",
    "clean:dist": "rimraf dist/* !dist/.gitignore",
    "clean:tmp": "rimraf tmp/* !tmp/.gitignore",
    "clean:coverage": "rimraf devel/coverage/* !devel/coverage/.gitignore",
    "clean:npm": "rimraf npm-debug.log",
    "coverage": "npm-run-all --parallel coverage:run --serial coverage:check",
    "coverage:run": "NODE_ENV=test babel-node ./node_modules/.bin/istanbul cover --root ./src --config ./config/istanbul.yaml _mocha --env.test -- --opts ./config/mocha.options  './test/**/*.spec.js'",
    "coverage:check": "NODE_ENV=test istanbul check-coverage --config ./config/istanbul.yaml",
    "lint": "npm-run-all lint:*",
    "lint:stylelint": "stylelint './src/sass/**/*.scss' --syntax scss --config ./config/stylelint.json",
    "lint:semistandard": "eslint --no-eslintrc --ignore-path ./config/eslintignore.txt --config ./config/eslint.json ./src",
    "test": "NODE_ENV=test mocha --env.test --opts ./config/mocha.options './test/**/*.spec.js'",
    "test:watch": "npm run test -- --watch",
    "test:grep": "npm run test -- --watch --grep $pattern",
    "precommit": "npm run verify",
    "verify": "npm-run-all lint test",
    "vendor:perf": "webpack --config ./config/webpack-perf.js",
    "prebuild": "npm-run-all clean:dist verify vendor:perf",
    "build": "webpack --config ./config/webpack-main.js --env.devel --progress",
    "start": "npm-run-all vendor:perf dev",
    "dev": "babel-node devel --env.devel --hot --port 8000"
  },
  "dependencies": {
    "aframe": "^0.4.0",
    "babel-polyfill": "^6.20.0",
    "moment": "^2.17.1"
  },
  "devDependencies": {
    "autoprefixer": "^6.6.0",
    "babel-cli": "^6.18.0",
    "babel-core": "^6.21.0",
    "babel-eslint": "^7.1.1",
    "babel-loader": "^6.2.10",
    "babel-plugin-istanbul": "^3.0.0",
    "babel-preset-latest": "^6.16.0",
    "babel-preset-stage-0": "^6.16.0",
    "body-parser": "^1.15.2",
    "chai": "^3.5.0",
    "chalk": "^1.1.3",
    "compression": "^1.6.2",
    "connect-history-api-fallback": "^1.3.0",
    "copy-webpack-plugin": "^4.0.1",
    "css-loader": "^0.26.1",
    "eslint": "^3.12.2",
    "eslint-config-semistandard": "^7.0.0",
    "eslint-config-standard": "^6.2.1",
    "eslint-loader": "^1.6.1",
    "eslint-plugin-promise": "^3.4.0",
    "eslint-plugin-standard": "^2.0.1",
    "exports-loader": "^0.6.3",
    "express": "^4.14.0",
    "extract-text-webpack-plugin": "^2.0.0-beta.4",
    "file-loader": "^0.9.0",
    "html-loader": "^0.4.4",
    "html-webpack-plugin": "^2.24.1",
    "husky": "^0.12.0",
    "ignore-styles": "^5.0.1",
    "imports-loader": "^0.7.0",
    "ip": "^1.1.4",
    "istanbul": "^1.1.0-alpha.1",
    "jsdom": "^9.9.1",
    "json-loader": "^0.5.4",
    "mocha": "^3.2.0",
    "node-sass": "^4.1.1",
    "npm-run-all": "^3.1.2",
    "postcss-loader": "^1.2.1",
    "precss": "^1.4.0",
    "raw-loader": "^0.5.1",
    "resolve-url-loader": "^1.6.1",
    "rimraf": "^2.5.4",
    "sass-loader": "^4.1.1",
    "sinon": "^1.17.6",
    "style-loader": "^0.13.1",
    "stylelint": "^7.7.0",
    "stylelint-config-standard": "^15.0.1",
    "stylelint-webpack-plugin": "^0.4.2",
    "url-loader": "^0.5.7",
    "webpack": "^2.2.0-rc.2",
    "webpack-bundle-size-analyzer": "^2.2.0",
    "webpack-dev-middleware": "^1.9.0",
    "webpack-hot-middleware": "^2.14.0"
  },
  "engineStrict": true,
  "engines": {
    "node": ">= 6"
  },
  "semistandard": {
    "parser": "babel-eslint",
    "ignore": [
      "config/**",
      "devel/**",
      "dist/**",
      "tmp/**",
      "**/vendor/**"
    ]
  },
  "babel": {
    "presets": [
      "latest",
      "stage-0"
    ],
    "env": {
      "test": {},
      "development": {},
      "production": {}
    }
  }
}
